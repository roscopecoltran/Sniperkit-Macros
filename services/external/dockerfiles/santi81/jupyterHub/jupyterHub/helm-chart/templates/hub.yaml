{{ if eq .Values.hub.db.type "sqlite-pvc" -}}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: hub-db-dir
  namespace: {{ default .Release.Namespace .Values.name }}
  # annotations:
    # volume.beta.kubernetes.io/storage-class: hub-storage-{{ default .Release.Namespace .Values.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: {{.Values.hub.storage.class | quote}} 
 
---
{{- end }}
apiVersion: v1
kind: Service
metadata:
  name: hub
  {{ if .Values.name }}namespace: {{ .Values.name }} {{ end }}
spec:
  selector:
    name: hub-pod
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: hub-config
  {{ if .Values.name }}namespace: {{ .Values.name }} {{ end }}
data:
  token.proxy: {{ .Values.token.proxy | quote }}
  {{ if .Values.cull.enabled -}}
  cull.token: {{ .Values.cull.token | quote }}
  {{- end }}

  auth.type: {{ .Values.auth.type | quote }}
  {{ if eq .Values.auth.type "hmac" -}}
  auth.hmac.secret-key: {{ .Values.auth.hmac.secretKey | quote }}
  {{- end }}
  {{ if eq .Values.auth.type "google" -}}
  auth.google.client-id: {{.Values.auth.google.clientId | quote}}
  auth.google.client-secret: {{.Values.auth.google.clientSecret | quote}}
  auth.google.hosted-domain: {{.Values.auth.google.hostedDomain | quote}}
  auth.google.login-service: {{.Values.auth.google.loginService | quote}}
  auth.google.callback-url: {{.Values.auth.google.callbackUrl}}
  {{- end }}
  {{ if eq .Values.auth.type "github" -}}
  auth.github.client-id: {{.Values.auth.github.clientId | quote}}
  auth.github.client-secret: {{.Values.auth.github.clientSecret | quote}}
  {{- end }}
  {{ if eq .Values.auth.type "sap" -}}
  auth.sap.client-id: {{.Values.auth.sap.clientId | quote}}
  auth.sap.client-secret: {{.Values.auth.sap.clientSecret | quote}}
  {{- end }}
  {{ if .Values.singleuser.cmd -}}
  singleuser.cmd: {{ .Values.singleuser.cmd | quote }}
  {{- end }}
  singleuser.storage.type: {{ .Values.singleuser.storage.type | quote }}
  singleuser.storage.home_mount_path: {{ .Values.singleuser.storage.homeMountPath | quote }}
  {{ if eq .Values.singleuser.storage.type "dynamic" -}}
  singleuser.storage.class: {{.Values.singleuser.storage.class | quote }}
  singleuser.storage.capacity: {{.Values.singleuser.storage.capacity | quote }}
  {{ else if eq .Values.singleuser.storage.type "hostPath" -}}
  singleuser.storage.home_host_path_template: {{ .Values.singleuser.storage.homeHostPathTemplate | quote }}
  {{- end }}
  {{ if .Values.singleuser.memory.limit -}}
  singleuser.memory.limit: {{ .Values.singleuser.memory.limit | quote}}
  {{- end }}
  {{ if .Values.singleuser.memory.guarantee -}}
  singleuser.memory.guarantee: {{ .Values.singleuser.memory.guarantee | quote}}
  {{- end }}
  {{ if .Values.singleuser.cpu.limit -}}
  singleuser.cpu.limit: {{ .Values.singleuser.cpu.limit | quote}}
  {{- end }}
  {{ if .Values.singleuser.cpu.guarantee -}}
  singleuser.cpu.guarantee: {{ .Values.singleuser.cpu.guarantee | quote}}
  {{- end }}
  {{ if .Values.singleuser.extraLabels -}}
  singleuser.extra-labels: |
    {{ range $key, $value := .Values.singleuser.extraLabels -}}
    {{ $key | quote }}: {{ $value | quote }}
    {{- end }}
  {{- end }}
  token.cookie_secret: {{ .Values.hub.cookieSecret | quote }}
  hub.base_url: {{ .Values.hub.baseUrl | quote }}
  {{ if eq .Values.hub.db.type "sqlite-pvc" -}}
  hub.db_url: "sqlite:///jupyterhub.sqlite"
  {{ else if eq .Values.hub.db.type "sqlite-memory" -}}
  hub.db_url: "sqlite://"
  {{ else -}}
  hub.db_url: {{ .Values.hub.db.url | quote }}
  {{- end }}
  admin.access: {{ .Values.admin.access | quote }}
  {{ if .Values.admin.users -}}
  admin.users: |
    {{ range $user := .Values.admin.users -}}
    - {{ $user }}
    {{ end }}
  {{- end }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: hub-deployment
  {{ if .Values.name }}namespace: {{ .Values.name }} {{ end }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: hub-pod
        {{ if .Values.hub.labels -}}
        # Because toYaml + indent is super flaky
        {{ range $key, $value := .Values.proxy.labels -}}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
    spec:
      volumes:
      - name: config
        configMap:
          name: hub-config
      {{ if eq .Values.hub.db.type "sqlite-pvc" }}
      - name: hub-db-dir
        persistentVolumeClaim:
          claimName: hub-db-dir
      {{- end }}
      containers:
      - name: hub-container
        image: {{ .Values.hub.image.name }}:{{ .Values.hub.image.tag }}
        imagePullPolicy: Always
        volumeMounts:
          - mountPath: /etc/jupyterhub/config/
            name: config
        {{ if eq .Values.hub.db.type "sqlite-pvc" }}
          - mountPath: /srv/jupyterhub
            name: hub-db-dir
        {{- end }}
        resources:
{{ toYaml .Values.hub.resources | indent 12}}
        env:
        # Put this here directly so hub will restart when we
        # change this
        - name: SINGLEUSER_IMAGE
          value:  "{{ .Values.singleuser.image.name }}:{{ .Values.singleuser.image.tag }}"
        - name: JPY_COOKIE_SECRET
          valueFrom:
            configMapKeyRef:
              name: hub-config
              key: token.cookie_secret
        {{ if .Values.singleuser.mounts -}}
        {{ if .Values.singleuser.mounts.shared -}}
        - name: SHARED_DATA_MOUNTS
          value: "{{ range $key, $value := .Values.singleuser.mounts.shared }}{{$key}}={{$value}};{{end}}"
        {{- end }}
        {{- end }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIGPROXY_AUTH_TOKEN
          valueFrom:
            configMapKeyRef:
              name: hub-config
              key: token.proxy
        {{ if eq .Values.auth.type "sap" -}}
        - name: OAUTH2_AUTHORIZE_URL 
          value: "{{ .Values.auth.sap.authorizeURL }}"
        - name: OAUTH2_TOKEN_URL
          value: "{{ .Values.auth.sap.tokenURL }}"
        - name: OAUTH2_USERDATA_URL
          value: "{{ .Values.auth.sap.resourceURL }}"
        - name: OAUTH2_USERNAME_KEY
          value: "{{ .Values.auth.sap.usernameKey }}"
        {{- end }}
        {{ if .Values.hub.proxy -}}
        - name: HTTP_PROXY_HOST
          value: "{{ .Values.hub.proxy.proxyHost }}"
        - name: HTTP_PROXY_PORT
          value: "{{ .Values.hub.proxy.proxyPort }}"
        - name: http_proxy
          value: "http://{{ .Values.hub.proxy.proxyHost }}:{{ .Values.hub.proxy.proxyPort }}"
        - name: https_proxy
          value: "http://{{ .Values.hub.proxy.proxyHost }}:{{ .Values.hub.proxy.proxyPort }}"
        {{- end }}
        {{ if eq .Values.auth.type "github" -}}
        {{ if .Values.auth.github.githubhost -}}
        - name: GITHUB_HOST
          value: "{{ .Values.auth.github.githubhost }}"
        {{- end }}
        {{- end }}
        ports:
          - containerPort: 8081
            name: hub
