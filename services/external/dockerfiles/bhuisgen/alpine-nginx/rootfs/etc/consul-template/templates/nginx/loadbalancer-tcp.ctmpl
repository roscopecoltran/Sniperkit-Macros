{{- $nginx_worker_processes := env "NGINX_WORKERPROCESSES" -}}
{{- $nginx_worker_connections := env "NGINX_WORKERCONNECTIONS" -}}
{{- $nginx_worker_rlimit_nofile := env "NGINX_WORKERRLIMITNOFILE" -}}
{{- $nginx_access_log := env "NGINX_ACCESSLOG" -}}
{{- $nginx_reuseport := env "NGINX_REUSEPORT" -}}
{{- $nginx_ssl := env "NGINX_SSL" -}}
{{- $nginx_ssl_certificate := env "NGINX_SSLCERTIFICATE" -}}
{{- $nginx_ssl_certificate_key := env "NGINX_SSLCERTIFICATEKEY" -}}
{{- $loadbalancer_listeners := env "NGINX_TEMPLATE_LOADBALANCERTCP_LISTENERS" -}}
{{- $loadbalancer_ssl_listeners := env "NGINX_TEMPLATE_LOADBALANCERTCP_SSLLISTENERS" -}}
{{- $loadbalancer_keyprefix := env "NGINX_TEMPLATE_LOADBALANCERTCP_KEYPREFIX" -}}
{{- $nginx_upstream_method := env "NGINX_TEMPLATE_LOADBALANCERTCP_UPSTREAMMETHOD" -}}
{{- $nginx_upstream_weight := env "NGINX_TEMPLATE_LOADBALANCERTCP_UPSTREAMWEIGHT" -}}
{{- $nginx_upstream_max_conns := env "NGINX_TEMPLATE_LOADBALANCERTCP_UPSTREAMMAXCONNS" -}}
{{- $nginx_upstream_max_fails := env "NGINX_TEMPLATE_LOADBALANCERTCP_UPSTREAMMAXFAILS" -}}
{{- $nginx_upstream_fail_timeout := env "NGINX_TEMPLATE_LOADBALANCERTCP_UPSTREAMFAILTIMEOUT" -}}
daemon off;
user nginx;
worker_processes {{if $nginx_worker_processes}}{{$nginx_worker_processes}}{{else}}1{{end}};
{{if $nginx_worker_rlimit_nofile}}worker_rlimit_nofile {{$nginx_worker_rlimit_nofile}};{{end}}
pid  /var/run/nginx.pid;
pcre_jit on;
include /etc/nginx/modules/*.conf;

events {
    worker_connections {{if $nginx_worker_connections}}{{$nginx_worker_connections}}{{else}}1024{{end}};
    use epoll;
    multi_accept on;
}

stream {
    tcp_nodelay on;

    #log_format basic '$remote_addr [$time_local] '
    #                    '$protocol $status $bytes_sent $bytes_received '
    #                    '$session_time';
    #
    #{{if eq $nginx_access_log "1"}}
    #access_log /var/log/nginx/access.log basic buffer=1m flush=10s;
    #{{else}}
    #access_log off;
    #{{end}}
    error_log /var/log/nginx/error.log warn;

    {{range $listener := $loadbalancer_listeners | split ","}}
    upstream tcp-out-{{$listener}} {
        {{if $nginx_upstream_method}}{{$nginx_upstream_method}};{{end}}

        {{range ls (print $loadbalancer_keyprefix "targets/" $listener)}
        server {{.Key}} weight={{if $nginx_upstream_weight}}{{$nginx_upstream_weight}}{{else}}1{{end}}{{if $nginx_upstream_max_conns}} max_conns={{$nginx_upstream_max_conns}}{{end}} max_fails={{if $nginx_upstream_max_fails}}{{$nginx_upstream_max_fails}}{{else}}1{{end}} fail_timeout={{if $nginx_upstream_fail_timeout}}{{$nginx_upstream_fail_timeout}}{{else}}10s{{end}};
        {{else}}
        server 127.0.0.1:{{$listener}} down;
        {{end}}
    }

    server {
        listen {{$listener}}{{if eq $nginx_reuseport "1"}} reuseport{{end}};
        listen [::]:{{$listener}}{{if eq $nginx_reuseport "1"}} reuseport{{end}};

        proxy_pass tcp-out-{{$listener}};
    }
    {{end}}

    {{if eq $nginx_ssl "1"}}
    {{range $listener := $loadbalancer_ssl_listeners | split ","}}
    upstream tcp-ssl-out-{{$ssl_listener}} {
        {{if $nginx_upstream_method}}{{$nginx_upstream_method}};{{end}}

        {{range ls (print $loadbalancer_keyprefix "ssl_targets/" $ssl_listener)}}
        server {{.Key}} weight={{if $nginx_upstream_weight}}{{$nginx_upstream_weight}}{{else}}1{{end}}{{if $nginx_upstream_max_conns}} max_conns={{$nginx_upstream_max_conns}}{{end}} max_fails={{if $nginx_upstream_max_fails}}{{$nginx_upstream_max_fails}}{{else}}1{{end}} fail_timeout={{if $nginx_upstream_fail_timeout}}{{$nginx_upstream_fail_timeout}}{{else}}10s{{end}};
        {{else}}
        server 127.0.0.1:{{$ssl_listener}} down;
        {{end}}
    }

    server {
        listen {{$ssl_listener}}{{if eq $nginx_reuseport "1"}} reuseport{{end}} ssl;
        listen [::]:{{$ssl_listener}}{{if eq $nginx_reuseport "1"}} reuseport{{end}} ssl;

        ssl_certificate {{$nginx_ssl_certificate}};
        ssl_certificate_key {{$nginx_ssl_certificate_key}};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_ecdh_curve secp384r1;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        proxy_pass tcp-ssl-out-{{$ssl_listener}};
    }
    {{end}}
    {{end}}
}
