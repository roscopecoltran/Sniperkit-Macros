---
- name: Add application to docker group
  user:
    name:  "{{ APPLICATION_USER }}"
    group: "{{ APPLICATION_GROUP }}"
    groups: "docker"
    append: yes

- name: Fix permissions
  file:
    path: "/app"
    owner: "{{ APPLICATION_USER }}"
    group: "{{ APPLICATION_GROUP }}"
    recurse: yes

- name: Diable nginx demonize mode
  lineinfile:
    dest:   /etc/nginx/nginx.conf
    regexp: '[\s;]*{{ item.key }}[\s]*'
    line:   '{{ item.key }} {{ item.value }};'
  with_items:
   - { key: 'daemon', value: 'off' }

- name: Enable nginx main config
  file:
    src:  '/opt/docker/etc/nginx/vhost.conf'
    dest: '/etc/nginx/sites-available/default'
    state: link
    force: yes

- name: Fix permissions of public and asset directories
  command: find /app/public -type d -exec chmod -c 0755 {} \;

- name: Fix permissions of public and asset files
  command: find /app/public -type f -exec chmod -c 0644 {} \;

- name: Fix owner of public and asset files
  command: chown -R '{{ APPLICATION_USER }}:{{ APPLICATION_GROUP }}' /app/public

- name: Remove old log directory
  file:
    path:  "/var/lib/nginx/logs"
    state: absent

- name: Create log directory
  file:
    path:  "/var/lib/nginx/logs"
    state: directory

- name: Create stdout symlinks
  file:
    dest:  "{{ item }}"
    src:   "/docker.stdout"
    state: link
    force: yes
  with_items:
    - "/var/lib/nginx/logs/access.log"
    - "/var/lib/nginx/logs/error.log"

- name: Create storage directories
  file:
    path:  "{{ item }}"
    state: directory
    owner: "{{ APPLICATION_USER }}"
    group: "{{ APPLICATION_GROUP }}"
    mode:  u=rwX,g=rX,o=rX
    recurse: yes
  with_items:
    - "/storage"
    - "/storage/db"
