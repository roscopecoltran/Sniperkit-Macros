#! /bin/bash
set -e

DOMAIN=${DOMAIN:-qubestash}

DOCKER_BINARY=docker
# DOCKER_BINARY="echo docker"

varnishVersions=${1:-4.1.3}

# variants=${2:-debian:latest alpine:latest}
variants=${2:-alpine:latest}
# variants=${2:-debian:latest}

echo
cat <<DOCKER_STATEMENT
===============================================================================
===============================================================================
== Building wordpress Dockerfiles for 
== Varnish Cache Versions: $varnishVersions
== Variants: $variants
===============================================================================
===============================================================================
DOCKER_STATEMENT
# exit 0

#
#
#
QubeStash::Wordpress::init(){
    local variant=$1
    cat <<DOCKER_FILE
#
# NOTE: THIS DOCKERFILE IS GENERATED VIA "update.sh"
#
# PLEASE DO NOT EDIT IT DIRECTLY.
#

##<autogenerated>##
FROM $variant

MAINTAINER Dragos Cirjan <dragos.cirjan@gmail.com>

DOCKER_FILE
}

#
#
#
QubeStash::Wordpress::env(){
    cat <<DOCKER_FILE
ENV VCL_USE_CONFIG no
ENV VCL_CONFIG '/etc/varnish/default.vcl'

ENV VCL_CACHE_SIZE 64m
ENV VCL_BACKEND_ADDRESS 0.0.0.0
ENV VCL_BACKEND_PORT 80
##</autogenerated>##

DOCKER_FILE
}

#
#
#
QubeStash::Wordpress::dependencies(){
    local variant=$1
#     cat Dockerfile.template.deps.$variant
#     cat <<DOCKER_FILE
# ##<autogenerated>##
#     && docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\
#     && docker-php-ext-install gd mysqli opcache \\
# ##</autogenerated>##
# DOCKER_FILE
#     cat Dockerfile.template.deps-remove.$variant
}

#
#
#
QubeStash::Wordpress::install(){
    cat <<DOCKER_FILE

##<autogenerated>##
RUN apk add --update varnish && rm -rf /var/cache/apk/*

DOCKER_FILE
}

#
#
#
QubeStash::Wordpress::configure(){
    cat <<DOCKER_FILE

##</autogenerated>##

DOCKER_FILE
}

#
#
#
QubeStash::Wordpress::entrypoint(){
    local variant=$1

cat <<DOCKER_FILE
##<autogenerated>##
VOLUME /etc/varnish

COPY docker-entrypoint.sh /

ENTRYPOINT /docker-entrypoint.sh

EXPOSE 80
##</autogenerated>##
DOCKER_FILE
}

for variant in $variants; do

    for version in $varnishVersions; do

        dockerPath="$(echo $version | awk -F'.' '{print $1"."$2}')/$(echo $variant | cut -f1 -d':')"
        dockerFile="$dockerPath/Dockerfile"

        ( rm -rf $dockerPath || true ) && mkdir -p $dockerPath && cp docker-* $dockerPath
        cp -rdf docker-entrypoint.sh $dockerPath

        QubeStash::Wordpress::init $variant > $dockerFile

        QubeStash::Wordpress::env >> $dockerFile
        
        QubeStash::Wordpress::dependencies ${variant/\//-} >> $dockerFile

        QubeStash::Wordpress::install >> $dockerFile

        QubeStash::Wordpress::configure >> $dockerFile

        QubeStash::Wordpress::entrypoint >> $dockerFile

        mainTag="$DOMAIN/varnish-cache:$version-$(echo $variant | cut -f1 -d':')"
        
        $DOCKER_BINARY build -t $mainTag ${dockerFile/Dockerfile/}

        for targetVersion in ${version%.*} ${version}; do
            targetVariant=$variant

            localTag=$DOMAIN/varnish-cache:$targetVersion-$(echo $variant | cut -f1 -d':')

            if [ $mainTag != $localTag ]; then
                $DOCKER_BINARY tag $mainTag $localTag
            fi

            if [ "$targetVersion" = "4.1" ]; then

                if [ "$variant" = "debian:latest" ]; then
                    $DOCKER_BINARY tag $mainTag $DOMAIN/varnish-cache:latest
                fi

                if [ "$variant" = "alpine:latest" ]; then
                    $DOCKER_BINARY tag $mainTag $DOMAIN/varnish-cache:alpine
                fi
            fi
        done
    done
done