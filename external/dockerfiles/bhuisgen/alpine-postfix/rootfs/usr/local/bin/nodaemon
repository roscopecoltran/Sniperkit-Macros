#!/usr/bin/env bash

function usage {
    echo -e "Usage: $(basename "$0") [<OPTIONS>] <COMMAND>"
    echo -e ""
    echo -e "Execute a process and waits the end of his execution."
    echo -e ""
    echo -e "Options:"
    echo -e "  --pid-file\t\tpid file to check"
    echo -e "  --remove-pid-file\tremove the pid file"
    echo -e "  --help\t\tdisplay this help and exit"
}

remove_pid_file=0

while [[ $# -gt 0 ]]
do
    key="$1"
    case $key in
        --pid-file)
        pid_file="$2"
        shift 2
        ;;

        --remove-pid-file)
        remove_pid_file=1
        shift
        ;;

        -h|--help)
        usage
        exit 0
        ;;

        *)
        command=$@
        break
        ;;
    esac
done

if [ -z "${pid_file}" ] || [ -z "${command}" ]; then
    usage
    exit 2
fi

function cleanup() {
    trap - ERR INT TERM

    kill $(cat "${pid_file}")

    if [ "${remove_pid_file}" -eq 1 ]; then
        rm -f "${pid_file}"
    fi
}

trap 'cleanup' EXIT
trap 'cleanup; exit 1' ERR INT TERM

${command}

while [ -f "${pid_file}" ] && kill -0 $(cat "${pid_file}") ; do
    sleep 4
done

exit 0
